@model ReportPostModel
@using _90sTest.Data.Extension;
@using _90sTest.Entities;
@{ ViewData["Title"] = "Report Post"; }

<div class="card">
    <div class="card-header">

        @Model.Post.User.Name (<a asp-controller="Profile" asp-action="Index" asp-route-username=@Model.Post.User.UserName>@@@Model.Post.User.UserName</a>)
        <div></div>
    </div>
    <div class="card-body">
        <p class="card-text">
            @Model.Post.Content
        </p>
        <div class="d-flex justify-content-end mt-3">
            <time datetime="@Model.Post.Date.ToString()" date-format="">@Model.Post.Date.ToString()</time>
            &nbsp;
            <div>@Model.Post.Likes Likes</div>
        </div>
    </div>
</div>
<br />
<div class="card card-tertiary">
    <div class="card-header">
        <span>What is the reason for the report?</span>
    </div>
    <div class="card-body">
        <form asp-action="ReportPost" asp-controller="Report">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="card-text">
                <div class="form-group">
                    <input asp-for="ReportedPost.PostId" value="@Model.Post.PostId" type="hidden" />

                    <label asp-for="ReportedPost.Type"></label>
                    <select asp-for="ReportedPost.Type" asp-items="Html.GetEnumSelectList<ReportType>()">
                    </select>
                    <span asp-validation-for="ReportedPost.Type" class="text-danger"></span>

                    @*<label asp-for="ReportedPost.Type"></label>
                        <!--<fieldset>
                            <legend>Please select one</legend>
                        @foreach (var value in Enum.GetValues(typeof(ReportedPost.ReportType)))
                        {
                            var id = TagBuilder.CreateSanitizedId(string.Format("{0}_{1}_{2}", "rdbtn", typeof(ReportedPost.ReportType), value), "_");
                        <div class="form-check form-check-radio">
                            @Html.RadioButtonFor(m => m.ReportedPost.Type, value, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="form-check-sign"></span>
                            @Html.Label(id, value.ToString(), new { htmlAttributes = new { @class = "form-check-label" } })
                            <!--<label class="form-check-label">
            <input asp-for="ReportedPost.Type" class="form-check-input" type="radio" name="reportTypeRadio" id="@value" value="@value" />-->
                            <!--
            @value.ToString()
        </label>-->
                        <!--</div>
                        }-->

                        <label asp-for="ReportedPost.Type"></label>
                            <input asp-for="ReportedPost.Type" class="form-control" type="radio"/>
                        <span asp-validation-for="ReportedPost.Type" class="text-danger"></span>
                            </fieldset> -->*@
                </div>
                <div class="form-group">
                    <label asp-for="ReportedPost.Description"></label>
                    <input asp-for="ReportedPost.Description" class="form-control" />
                    <span asp-validation-for="ReportedPost.Description" class="text-danger"></span>
                </div>
            </div>

            <div class="d-flex mt-3">
                <button class="btn btn-sm mr-2 btn-primary border-dark" type="submit">Report</button>
            </div>
        </form>
    </div>
</div>

<script>

    var d = new Date();
    var utcHours = d.getTimezoneOffset() / 60;

    var timeElements = document.getElementsByTagName("time");

    for (var i = 0, max = timeElements.length; i < max; i++) {
        var tempDate = new Date(timeElements[i].dateTime);
        tempDate.setTime(tempDate.getTime() - (utcHours * 60 * 60 * 1000));
        timeElements[i].dateTime = tempDate.toLocaleString();
        timeElements[i].innerText = timeElements[i].dateTime;
    }

</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}